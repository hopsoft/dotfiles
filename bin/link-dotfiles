#!/usr/bin/env ruby

require "pry"
require "fileutils"

DOTDIR = File.expand_path("../", File.dirname(__FILE__))

FileUtils.touch File.join(Dir.home, ".private")

def symlink_files(*files)
  files.each do |file|
    puts "---"
    homepath = File.join(Dir.home, file)
    dotpath = File.join(DOTDIR, file)

    FileUtils.mkdir_p File.dirname(homepath)

    if !File.exist?(homepath) || File.symlink?(homepath)
      FileUtils.ln_s dotpath, homepath, force: true, verbose: true
      next
    end

    print "File '#{homepath}' already exists. Delete? (y/n) "

    if gets.chomp.downcase == "y"
      FileUtils.rm_f homepath, verbose: true
      FileUtils.ln_s dotpath, homepath, force: true, verbose: true
    else
      puts "Skipping '#{homepath}'"
    end
  end
end

def symlink_directory(directory_name)
  dotfiles = Dir.glob(File.join(DOTDIR, directory_name, "**", "*"))
    .select { |f| File.file? f }
    .map { |f| f.sub("#{DOTDIR}/", "") }

  symlink_files(*dotfiles)
end

symlink_files(*%w[
  .bashrc
  .bat.zsh
  .fzf.zsh
  .gitconfig
  .gitignore
  .ignore
  .irbrc
  .pryrc
  .rubocop.yml
  .ruby.zsh
  .tmux.conf
  .yard.zsh
  .zshrc
])

symlink_directory ".ctags.d"
symlink_directory ".config"
