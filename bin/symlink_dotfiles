#!/usr/bin/env ruby

require 'fileutils'

DOTDIR = File.expand_path('../', File.dirname(__FILE__))

FileUtils.touch File.join(Dir.home, '.private')

def symlink_files(*files)
  files.each do |filename|
    puts "---"
    homepath = File.join(Dir.home, filename)
    dotpath = File.join(DOTDIR, filename)

    FileUtils.mkdir_p File.dirname(homepath)

    if File.symlink? homepath
      FileUtils.ln_s dotpath, homepath, force: true, verbose: true
      next
    end

    print "File '#{homepath}' already exists. Delete? (y/n) "

    if gets.chomp.downcase == "y"
      FileUtils.rm_f homepath, verbose: true
      FileUtils.ln_s dotpath, homepath, force: true, verbose: true
    else
      puts "Skipping '#{homepath}'"
    end
  end
end

def symlink_directory(directory_name)
  homepath = File.join(Dir.home, directory_name)
  dotpath = File.join(DOTDIR, directory_name)

  dotfiles = Dir.glob(File.join(dotpath, '*'))
    .select { |f| File.file? f }
    .map { |f| "#{directory_name}/#{File.basename(f)}" }

  symlink_files *dotfiles
end

symlink_files *%w[
  .bashrc
  .fzf.zsh
  .gitconfig
  .gitignore
  .ignore
  .irbrc
  .pryrc
  .rubocop.yml
  .zshrc
]

symlink_directory ".ctags.d"
symlink_directory ".config"
